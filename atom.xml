<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Alive</title>
  <icon>https://chongyuzhao.github.io/icon.png</icon>
  <subtitle>just forever</subtitle>
  <link href="/chongyuzhao.github.io/atom.xml" rel="self"/>
  
  <link href="https://chongyuzhao.github.io/"/>
  <updated>2020-07-11T13:41:22.994Z</updated>
  <id>https://chongyuzhao.github.io/</id>
  
  <author>
    <name>chongyuzhao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android-Input子系统专题-InputFlinger(二)之InputReader</title>
    <link href="https://chongyuzhao.github.io/2020/03/26/input/Android-Input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-InputFlinger(%E4%BA%8C)%E4%B9%8BInputReader/"/>
    <id>https://chongyuzhao.github.io/2020/03/26/input/Android-Input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-InputFlinger(%E4%BA%8C)%E4%B9%8BInputReader/</id>
    <published>2020-03-26T13:25:56.000Z</published>
    <updated>2020-07-11T13:41:22.994Z</updated>
    
    <summary type="html">
    
      ​ 从InputFlinger的启动篇我们可以知道，InputReader是InputFlinger的核心之一，我们这一篇就围绕这InputReader进行分析研究。

​ InputReader从名字上来看，就知道InputReader的主要作用就是读取Input事件，这个Input事件包括设备的插拔事件、设备的上报事件。本文档主要就从这两种事件的读取和处理过程进行学习。

InputReader的运行


​ 我们在InputFlinger那一篇文章中有提到过InputReader的创建：

1
2
3
4
5


22 sp&lt;InputReaderInterface&gt; createInp
    
    </summary>
    
    
    
      <category term="Android" scheme="https://chongyuzhao.github.io/tags/Android/"/>
    
      <category term="Input" scheme="https://chongyuzhao.github.io/tags/Input/"/>
    
  </entry>
  
  <entry>
    <title>Android多屏幕专题--双Home的启动</title>
    <link href="https://chongyuzhao.github.io/2020/03/22/Android%E5%A4%9A%E5%B1%8F%E5%B9%95%E4%B8%93%E9%A2%98-%E5%8F%8CHome%E7%9A%84%E5%90%AF%E5%8A%A8/"/>
    <id>https://chongyuzhao.github.io/2020/03/22/Android%E5%A4%9A%E5%B1%8F%E5%B9%95%E4%B8%93%E9%A2%98-%E5%8F%8CHome%E7%9A%84%E5%90%AF%E5%8A%A8/</id>
    <published>2020-03-22T02:54:36.000Z</published>
    <updated>2020-03-26T11:18:54.496Z</updated>
    
    <summary type="html">
    
      Android多屏幕专题 – 双Home的启动
​ 在一个偶然的机会下，发现AndroidQ是支持两个Launcher的，在两个显示设备的情况下，可以分别启动两个Launcher，在这两个Launcher中都可以操作，如打开应用，虚拟导航栏等，也就是说，使用这种模式，是可以同时打开两个应用分别操作。

​ 启动双Home的方式，首先是这个Android系统不能是低内存设备(low ram device)，其次可通过settings put global force_desktop_mode_on_external_displays 1，重启后两个显示器上就有不同的Home了。

​ 下面我们就
    
    </summary>
    
    
    
      <category term="Android" scheme="https://chongyuzhao.github.io/tags/Android/"/>
    
      <category term="AMS" scheme="https://chongyuzhao.github.io/tags/AMS/"/>
    
  </entry>
  
  <entry>
    <title>Android多屏幕专题--开篇</title>
    <link href="https://chongyuzhao.github.io/2020/03/21/Android%E5%A4%9A%E5%B1%8F%E5%B9%95%E4%B8%93%E9%A2%98-%E5%BC%80%E7%AF%87/"/>
    <id>https://chongyuzhao.github.io/2020/03/21/Android%E5%A4%9A%E5%B1%8F%E5%B9%95%E4%B8%93%E9%A2%98-%E5%BC%80%E7%AF%87/</id>
    <published>2020-03-21T13:58:57.000Z</published>
    <updated>2020-03-22T02:53:10.178Z</updated>
    
    <summary type="html">
    
      Android多屏幕
​ Android从4.4开始其实就已经有了(不确定最初是哪个版本)，在Android6.0的时候就有Presentation作为异显开发，而到AndroidQ，就已经发现有双Home(两个launcher，可以在两个显示屏上打开应用)。而我对这一块一直都比较感兴趣，而且涉及了Android frameworks很多的内容，诸如AMS、WMS、DisplayManagerService、SurfaceFlinger和Input等等。随着嵌入式芯片的性能越来越强，多屏操作也就不再吃力，Android也越来越接近像windows那样强大的界面操作能力。

分析步骤
​ 由于多
    
    </summary>
    
    
    
      <category term="Android" scheme="https://chongyuzhao.github.io/tags/Android/"/>
    
      <category term="AMS" scheme="https://chongyuzhao.github.io/tags/AMS/"/>
    
      <category term="WMS" scheme="https://chongyuzhao.github.io/tags/WMS/"/>
    
      <category term="Input" scheme="https://chongyuzhao.github.io/tags/Input/"/>
    
  </entry>
  
  <entry>
    <title>Android Input子系统专题-输入路由</title>
    <link href="https://chongyuzhao.github.io/2020/03/20/input/Android-Input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-%E8%BE%93%E5%85%A5%E8%B7%AF%E7%94%B1/"/>
    <id>https://chongyuzhao.github.io/2020/03/20/input/Android-Input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-%E8%BE%93%E5%85%A5%E8%B7%AF%E7%94%B1/</id>
    <published>2020-03-20T13:19:34.000Z</published>
    <updated>2020-03-27T14:01:23.135Z</updated>
    
    <summary type="html">
    
      Android Input输入路由
​ 路由在我们生活中基本都有接触，而我们这里说的输入路由主要是用在多屏幕多触摸输入设备中，设计者可以为对应的屏幕指定对应的输入设备，而这功能就是所谓的输入路由。

​ 从InputFlinger的学习中我们知道，在InputFlinger中没有屏幕(Screen)的概念，而我们的输入事件是通过查找对应的Viewport(视口)来发送到对应的窗口，而窗口在指定的屏幕上，也即是对应的输入事件发送到指定的屏幕中。在底层我们是不知道哪个触摸设备对应哪个屏幕的，例如当有两个HDMI设备时，那么我们哪个触摸设备对应哪个显示器呢，这是很不好去判断的，一般查找Viewpor
    
    </summary>
    
    
    
      <category term="Android" scheme="https://chongyuzhao.github.io/tags/Android/"/>
    
      <category term="Input" scheme="https://chongyuzhao.github.io/tags/Input/"/>
    
  </entry>
  
  <entry>
    <title>Android Input子系统专题-InputFlinger(一)</title>
    <link href="https://chongyuzhao.github.io/2020/03/15/input/Android-Input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-InputFlinger(%E4%B8%80)/"/>
    <id>https://chongyuzhao.github.io/2020/03/15/input/Android-Input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-InputFlinger(%E4%B8%80)/</id>
    <published>2020-03-15T13:39:40.000Z</published>
    <updated>2020-03-27T14:04:52.909Z</updated>
    
    <summary type="html">
    
      InputFlinger的启动
​ InputFlinger的源码在frameworks/native/services/inputflinger目录下，其是作为一个lib而存在，因此启动的代码也并不在这里。InputFlinger实际上是通过IMS的JNI启动起来的，在InputFlinger的源码目录下，是没有InputFlinger这么一个东西，host目录下的内容实际上并没有使用到。虽然没有InputFlinger这个类，但既然叫InputFlinger，那当然与这个名字有关系，我们可以看到，有一个BnInputFlinger的接口，而InputManager继承了这个接口，说明Inp
    
    </summary>
    
    
    
      <category term="Input" scheme="https://chongyuzhao.github.io/tags/Input/"/>
    
      <category term="AndroidQ" scheme="https://chongyuzhao.github.io/tags/AndroidQ/"/>
    
  </entry>
  
  <entry>
    <title>Android input子系统专题--开篇</title>
    <link href="https://chongyuzhao.github.io/2020/03/15/input/Android-input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-%E5%BC%80%E7%AF%87/"/>
    <id>https://chongyuzhao.github.io/2020/03/15/input/Android-input%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%93%E9%A2%98-%E5%BC%80%E7%AF%87/</id>
    <published>2020-03-15T05:16:00.000Z</published>
    <updated>2020-03-27T14:00:47.055Z</updated>
    
    <summary type="html">
    
      Android Input的分层
​ Android的input子系统大概是在2019年的3、4月份开始接触的，主要是因为负责Input部分的同事离职了，我就当仁不让地接上了这个话。Android是一个交互式的操作系统，显示与输入都是一个重要的组成部分。Android支持多种多样的输入设备，如触摸、游戏手柄、按键、鼠标、键盘等等。

​ 基于Android与Linux的关系，Android的input子系统也是可分成三层：设备驱动层 - inputflinger层 - 应用处理层。设备驱动层与inputflinger层之间是通过Linux的设备驱动节点进行连接，inputflinger与应用层
    
    </summary>
    
    
    
      <category term="Android" scheme="https://chongyuzhao.github.io/tags/Android/"/>
    
      <category term="input" scheme="https://chongyuzhao.github.io/tags/input/"/>
    
  </entry>
  
</feed>
